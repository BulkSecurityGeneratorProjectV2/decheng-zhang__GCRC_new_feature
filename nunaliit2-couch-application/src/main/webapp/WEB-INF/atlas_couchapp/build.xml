<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== -->
<project name="atlas-couchapp" default="default">
	<description>
		CouchApp for Atlas Application.
	</description>
	
	<!--
		Pick up properties related to when this script is called
		from a deployed WAR file.
	-->
	<property file="live.properties"/>

	<!-- Local override. -->
	<property file="build.properties"/>
	
	<!-- Configuration -->
	<property name="atlas.name" value="default"/>
	<property name="atlas.config.dir" location="/etc/nunaliit2/couchdb/${atlas.name}"/>
	<property file="${atlas.config.dir}/couch.properties"/>

	<!-- Default values -->
	<property name="couchdb.dbName" value="atlas"/>
	<property name="atlas.design.name" value="atlas"/>
	<property name="atlas.working.dir" location="./generated"/>
	<property name="couchdb.server.admin" value="http://127.0.0.1:5984"/>
	<property name="content.dir" location="./dummy_dir"/>
	
	<!-- Following hard coded for development environments. Overwritten in live systems. -->
	<property name="nunaliit2-js.dir" location="../../../../../../nunaliit2-js"/>
	<property name="external-js.dir" location="../../../../../../nunaliit2-js-external"/>

	<property name="javascript.dest.dir" location="${atlas.working.dir}/${atlas.design.name}/_attachments"/>
	
	<!-- ================================= -->
	<target
		name="default"
		depends="couchAppPush"
		description="Generate and deploy application"
		>
	
	</target>

	<target
		name="clean"
		description="Clean all generated files"
		>
		
		<delete dir="${atlas.working.dir}" failonerror="false"/>
	
    	<ant
    		dir="../config_couchapp"
    		target="clean"
    		inheritall="true"
    		>
    	</ant>
	</target>
	
	<!-- ================================= -->
	<target
		name="couchAppPush"
		depends="staging"
		description="Deploy a couchApp"
		>
		
		<mkdir dir="${atlas.working.dir}"/>
		
		<exec
			executable="couchapp"
			dir="${atlas.working.dir}"
			>
			<arg line="push ${atlas.design.name} ${couchdb.server.admin}/${couchdb.dbName}"/>
		</exec>
	
	</target>

    <!-- ================================= -->
    <target 
    	name="configAppPush" 
    	description="Upload config couch application to server"
    	>
    	<ant
    		dir="../config_couchapp"
    		target="couchAppPush"
    		inheritall="true"
    		>
    	</ant>
    </target>

	<!-- ================================= -->
	<target
		name="staging"
		depends="couchAppGenerate,contentCopy,javascript-copy,appCopy"
		description="Generate application staging"
		>

	</target>

	<!-- ================================= -->
	<target
		name="couchAppGenerate"
		depends="couchapp-conditions"
		unless="project.exists"
		description="Generate a new couchApp"
		>
		
		<mkdir dir="${atlas.working.dir}"/>
		
		<exec
			executable="couchapp"
			dir="${atlas.working.dir}"
			>
			<arg line="generate ${atlas.design.name}"/>
		</exec>
	
	</target>

	<target name="couchapp-conditions">
		<available file="${atlas.working.dir}/${atlas.design.name}/_id" property="project.exists"/>
	</target>
	
	<!-- ================================= -->
	<target
		name="javascript-copy"
		description="Copy javascript library files"
		>

		<!-- Nunaliit2 library -->
		<ant
			dir="${nunaliit2-js.dir}"
			target="javascript-copy"
			>
			<property name="javascript.dest.dir" location="${javascript.dest.dir}"/>
		</ant>

		<!-- External javascript libraries -->
		<ant
			dir="${external-js.dir}"
			target="javascript-copy"
			>
			<property name="javascript.dest.dir" location="${javascript.dest.dir}"/>
		</ant>
	</target>
	
	<!-- ================================= -->
	<target
		name="appCopy"
		description="Copy application files"
		>
		
		<copy 
			todir="${atlas.working.dir}/${atlas.design.name}"
			>
			<fileset dir="./app"/>
		</copy>
	
		<copy 
			todir="${atlas.working.dir}/${atlas.design.name}/_attachments/lib"
			>
			<fileset dir="./app/vendor/nunaliit2"/>
		</copy>
	
	</target>
	
	<!-- ================================= -->
	<target
		name="contentCopy"
		depends="-contentCopy-conditions,-contentCopyVendor"
		if="content.exists"
		description="Copy files that make up the Atlas content"
		>
		
		<copy 
			todir="${atlas.working.dir}/${atlas.design.name}"
			overwrite="true"
			>
			<fileset dir="${content.dir}"/>
		</copy>
	</target>
	
	<target name="-contentCopy-conditions">
		<available file="${content.dir}" property="content.exists"/>
	</target>

	<target
		name="-contentCopyVendor"
		depends="-contentCopyVendor-conditions"
		if="contentVendor.exists"
		description="Copy files that make up the nunaliit2 vendor content"
		>
		
		<copy 
			todir="${atlas.working.dir}/${atlas.design.name}/_attachments/lib"
			overwrite="true"
			>
			<fileset dir="${content.dir}/vendor/nunaliit2"/>
		</copy>
	</target>
	
	<target name="-contentCopyVendor-conditions">
		<available file="${content.dir}/vendor/nunaliit2" property="contentVendor.exists"/>
	</target>

</project>
